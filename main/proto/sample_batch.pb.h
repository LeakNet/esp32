/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_MAIN_PROTO_SAMPLE_BATCH_PB_H_INCLUDED
#define PB_MAIN_PROTO_SAMPLE_BATCH_PB_H_INCLUDED
#include <pb.h>
#include "sys/types.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Sample {
    uint64_t timestamp;
    float flow;
    float pressure;
} Sample;

typedef struct _SampleBatch {
    pb_size_t samples_count;
    Sample samples[30];
} SampleBatch;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Sample_init_default                      {0, 0, 0}
#define SampleBatch_init_default                 {0, {Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default, Sample_init_default}}
#define Sample_init_zero                         {0, 0, 0}
#define SampleBatch_init_zero                    {0, {Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero, Sample_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define Sample_timestamp_tag                     1
#define Sample_flow_tag                          2
#define Sample_pressure_tag                      3
#define SampleBatch_samples_tag                  1

/* Struct field encoding specification for nanopb */
#define Sample_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   timestamp,         1) \
X(a, STATIC,   SINGULAR, FLOAT,    flow,              2) \
X(a, STATIC,   SINGULAR, FLOAT,    pressure,          3)
#define Sample_CALLBACK NULL
#define Sample_DEFAULT NULL

#define SampleBatch_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  samples,           1)
#define SampleBatch_CALLBACK NULL
#define SampleBatch_DEFAULT NULL
#define SampleBatch_samples_MSGTYPE Sample

extern const pb_msgdesc_t Sample_msg;
extern const pb_msgdesc_t SampleBatch_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Sample_fields &Sample_msg
#define SampleBatch_fields &SampleBatch_msg

/* Maximum encoded size of messages (where known) */
#define MAIN_PROTO_SAMPLE_BATCH_PB_H_MAX_SIZE    SampleBatch_size
#define SampleBatch_size                         690
#define Sample_size                              21

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
